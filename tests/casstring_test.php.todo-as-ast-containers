<?php
// This file is part of Stack - http://stack.maths.ed.ac.uk/
//
// Stack is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// Stack is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with Stack.  If not, see <http://www.gnu.org/licenses/>.

defined('MOODLE_INTERNAL') || die();

require_once(__DIR__ . '/../locallib.php');
require_once(__DIR__ . '/../stack/cas/casstring.class.php');

// Unit tests for {@link stack_cas_casstring}.
// @copyright  2012 The University of Birmingham.
// @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later.
// @group qtype_stack.

/**
 * @group qtype_stack
 */
class stack_cas_casstring_test extends basic_testcase {



    public function test_units_amu() {
        $s = '520*amu';
        $at1 = new stack_cas_casstring($s);
        $at1->set_context('units', true); // If we do not toggle units then amu if forbiddenly long.
        $this->assertTrue($at1->get_valid('s', true, 0));
    }

    public function test_units_mamu() {
        $s = '520*mamu';
        $at1 = new stack_cas_casstring($s);
        $at1->set_context('units', true); // If we do not toggle units then mamu if forbiddenly long.
        $this->assertFalse($at1->get_valid('s', true, 0));
    }


    public function test_log_key_vals_1() {
        $s = 'log_x:log_x(a)';
        $at1 = new stack_cas_casstring($s);
        $this->assertTrue($at1->get_valid('s', true, 0));
        $this->assertEquals('lg(a,x)', $at1->get_casstring());
        $this->assertEquals('log_x', $at1->get_key());
        $this->assertEquals('logsubs', $at1->get_answernote());
    }
