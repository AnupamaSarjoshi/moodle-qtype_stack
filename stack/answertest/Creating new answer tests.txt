****************************
Adding answer tests to STACK

Changelog: Version 9th October 2011 - Chris Sangwin

****************************

There are 3 types of answer tests:
    A) Those which use PHP to perform some calculation or comparison.
    B) Those which use a Answertest built into Maxima (E.g. in assessment.mac).
    C) Those which use standard CasText to perform a calculation and derive an answer.


Common Background Information
-----------------------------
Each answertest is stored as a individual object and stored in
a individual file in the answertest directory. Answertest must
all extend the base class AnsTest which provides methods for
accessing marks and feedback, these may be overridden if
required.

In most cases just two methods are needed, the constructor
which calls the super class's constructor and a doAnsTest()
method. No other public methods are allowed.

The doAnsTest method should return true or false depending on
the result of the answertest. If an error occurs the doAnsTest
should return NULL.



A) PHP Answertests
------------------
For an example see STACK_AnsTest_StringSloppy


B) Maxima Answertests
---------------------
Open assessment.mac and add or link to the Maxima code to
perform the answertest.

The Maxima function must return information in the correct
[Validity,RawMark,AnswerNote,FeedBack]

Validity must be true/false
RawMark must be true/false
AnswerNote is a string.
FeedBack is a string - later translated by STACK.

To turn this Maxima list into something which the PHP interface can deal with,
STACK calls the Maxima function StackReturn() defined in stackmaxima.mac

For an example see STACK_AnsTest_AlgEquiv

Note, however, that the Maxima code for this test is
particularly complicated.


C) CASText Answertests
----------------------

CASText Answertests are the most complex to create.

(See NumRelative.php for a more complex example).


D) Adding the Answertest to STACK
---------------------------------

Open AnsTestController.php, this file passes information onto the correct
answertest class. In the constructor, modify the $this->AvaliableAnsTest array
to include your answertest in the form:

'Answertest class name' => 'Display name for answertest',

Below this add the code to pass link the answer test to STACK.

Inside the switch statement add:

case 'ClassName':
        require_once 'ClassName.php';
                $this->AT = new ClassName($sAnsKey, $tAnsKey, $maximaPreferencs, $casOption);
                break;


Answertest variables
--------------------
Full list of variables that may be returned by an answertest

(float)   $this->ATMark     - The raw mark
(bool)    $this->ATValid    - Whether the answertest result was valid or not
(string)  $this->ATAnsNote  - The answernote for the teacher
(castext) $this->ATFeedback - Feedback for the student
(string)  $this->ATError    - Any errors that occurred.
