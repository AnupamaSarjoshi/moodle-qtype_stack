language: php

sudo: required

addons:
  firefox: "47.0.1"
  postgresql: "9.3"
  apt:
    packages:
      - oracle-java8-installer
      - oracle-java8-set-default
      - maxima
      - maxima-share
      - texinfo

cache:
  directories:
    - $HOME/.composer/cache
    - $HOME/.npm

matrix:
  # I would like to run at least some of these with DB=mysqli, but that
  # currently fails with dist: trusty which we need for Maxima.
  # The error is ERROR 2002 (HY000): Can't connect to local MySQL server through socket '/var/run/mysqld/mysqld.sock' (2)
  # The solution is to add --protocol=TCP in src/Installer/Database/MySQLDatabase.php
  # in https://github.com/moodlerooms/moodle-plugin-ci, but I can't work out
  # how to do that.
  include:

#    - php: 7.0
#      env: TASK=PHPUNIT          MOODLE_BRANCH=MOODLE_32_STABLE   DB=pgsql

#    - php: 5.6
#      env: TASK=PHPUNIT          MOODLE_BRANCH=MOODLE_33_STABLE   DB=mysqli

    # Would be good to run this next test in PHP 7.2, but STACK does not support that yet.
#    - php: 7.1
#      env: TASK=PHPUNIT          MOODLE_BRANCH=MOODLE_34_STABLE   DB=pgsql

    - php: 7.1
      env: TASK=PHPUNIT        MOODLE_BRANCH=MOODLE_35_STABLE   DB=mysqli

#    - php: 5.6
#      env: TASK=BEHAT          MOODLE_BRANCH=MOODLE_32_STABLE   DB=mysqli

#    - php: 7.0
#      env: TASK=BEHAT          MOODLE_BRANCH=MOODLE_33_STABLE   DB=pgsql

#    - php: 7.1
#      env: TASK=BEHAT          MOODLE_BRANCH=MOODLE_34_STABLE   DB=mysqli

    # Would be good to run this next test in PHP 7.2, but STACK does not support that yet.
#    - php: 7.1
#      env: TASK=BEHAT          MOODLE_BRANCH=MOODLE_35_STABLE   DB=pgsql

#    - php: 7.1
#      env: TASK=CODESTYLE      MOODLE_BRANCH=MOODLE_35_STABLE   DB=mysqli

#    - php: 7.1
#      env: TASK=CODEKNOWNFAILS MOODLE_BRANCH=MOODLE_35_STABLE   DB=mysqli

  allow_failures:
#    - php: 7.1
#      env: TASK=CODEKNOWNFAILS MOODLE_BRANCH=MOODLE_35_STABLE   DB=mysqli

before_install:
  - phpenv config-rm xdebug.ini
  - nvm install 8.9
  - nvm use 8.9
  - cd ../..
  - composer create-project -n --no-dev --prefer-dist moodlerooms/moodle-plugin-ci ci ^2
  - export PATH="$(cd ci/bin; pwd):$(cd ci/vendor/bin; pwd):$PATH"

install:
  - moodle-plugin-ci add-plugin maths/moodle-qbehaviour_dfexplicitvaildate
  - moodle-plugin-ci add-plugin maths/moodle-qbehaviour_dfcbmexplicitvaildate
  - moodle-plugin-ci add-plugin maths/moodle-qbehaviour_adaptivemultipart
  - moodle-plugin-ci install

  # Output some diagnostic about how the install went.
  # Travis seems to be using Maxima version 5.32.1, lisp gcl, which is very old!
  - maxima --list-avail
  - echo 'ATAlgEquiv(x^2-1,(x-1)*(x+1));quit();' | /home/travis/build/moodledata/phpu_moodledata/stack/maxima_opt_auto -eval '(cl-user::run)'

script:
  # Run all the PHP unit tests.
  - if [ "$TASK" = 'PHPUNIT' ];        then moodle-plugin-ci phpunit;     fi

  # Run all the Behat tests.
  - if [ "$TASK" = 'BEHAT' ];          then moodle-plugin-ci behat;       fi

  # Run all the various code style tests - this subset should all pass.
  - if [ "$TASK" = 'CODESTYLE' ];      then moodle-plugin-ci phplint;     fi
  - if [ "$TASK" = 'CODESTYLE' ];      then moodle-plugin-ci validate;    fi
  - if [ "$TASK" = 'CODESTYLE' ];      then moodle-plugin-ci savepoints;  fi
  - if [ "$TASK" = 'CODESTYLE' ];      then moodle-plugin-ci mustache;    fi
  - if [ "$TASK" = 'CODESTYLE' ];      then moodle-plugin-ci grunt;       fi

  # Run all the various code style tests - these ones are konwn to fail.
  # Once we get them passing, move them to the CODESTYLE section above.
  - if [ "$TASK" = 'CODEKNOWNFAILS' ]; then moodle-plugin-ci phpmd;       fi
  - if [ "$TASK" = 'CODEKNOWNFAILS' ]; then moodle-plugin-ci phpcpd;      fi
  - if [ "$TASK" = 'CODEKNOWNFAILS' ]; then moodle-plugin-ci codechecker; fi
