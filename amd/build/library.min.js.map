{"version":3,"file":"library.min.js","sources":["../src/library.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * A javascript module to handle requests for library question info\n * and to import questions.\n *\n * @module     qtype_stack/library\n * @copyright  2024 The University of Edinburgh\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine([\n    'core/ajax',\n    'core_filters/events'\n], function(\n    Ajax,\n    CustomEvents\n) {\n\n    let categoryId = null;\n    let libraryDiv = null;\n    let rawDiv = null;\n    let variablesDiv = null;\n    let importListDiv = null;\n    let displayedDiv = null;\n    let errorDiv = null;\n    let currentPath = null;\n\n    /**\n     * Sets up event listeners.\n     *\n     * @param {int} cId ID of question category that questions will be imported into.\n     */\n    function setup(cId) {\n        categoryId = cId;\n        libraryDiv = document.querySelector('.stack_library_display');\n        rawDiv = document.querySelector('.stack_library_raw_display');\n        variablesDiv = document.querySelector('.stack_library_variables_display');\n        importListDiv = document.querySelector('.stack-library-imported-list');\n        displayedDiv = document.querySelector('.stack_library_selected_question');\n        errorDiv = document.querySelector('.stack-library-error');\n        loading(true);\n        const linksArray = document.querySelectorAll('.library-file-link');\n        linksArray.forEach(function(elem) {\n            elem.addEventListener('click', libraryRender);\n        });\n        const importButton = document.querySelector('.library-import-link');\n        importButton.addEventListener('click', libraryImport);\n        loading(false);\n    }\n\n    /**\n     * Performs AJAX call to Moodle to get info on a question when\n     * a link containing the questions filename is clicked.\n     *\n     * @param {object} e the click event triggering the function call.\n     */\n    function libraryRender(e) {\n        const filepath = e.target.getAttribute('data-filepath');\n        currentPath = filepath;\n        loading(true);\n        errorDiv.hidden = true;\n        Ajax.call([{\n            methodname: 'qtype_stack_library_render',\n            args: {category: categoryId, filepath: filepath},\n            done: function(response) {\n                loading(false);\n                libraryDiv.innerHTML = response.questionrender;\n                rawDiv.innerHTML = response.questiontext;\n                variablesDiv.innerHTML = response.questionvariables.replace(/;/g, \";<br>\");\n                displayedDiv.innerHTML = currentPath.split('/').pop();\n                document.querySelectorAll('.library-secondary-info')\n                    .forEach(el => el.removeAttribute('hidden'));\n                // This fires the Maths filters for content in the validation div.\n                CustomEvents.notifyFilterContentUpdated(libraryDiv);\n            },\n            fail: function() {\n                loading(false);\n                errorDiv.hidden = false;\n            }\n        }]);\n    }\n\n    /**\n     * Performs AJAX call to Moodle to import a question.\n     *\n     */\n    function libraryImport() {\n        if (!currentPath) {\n            return;\n        }\n        errorDiv.hidden = true;\n        const filepath = currentPath;\n        loading(true);\n        Ajax.call([{\n            methodname: 'qtype_stack_library_import',\n            args: {category: categoryId, filepath: filepath},\n            done: function(response) {\n                loading(false);\n                if (response.success) {\n                    importListDiv.innerHTML = importListDiv.innerHTML + '<br>' + currentPath.split('/').pop();\n                } else {\n                    errorDiv.hidden = false;\n                }\n            },\n            fail: function() {\n                loading(false);\n                errorDiv.hidden = false;\n            }\n        }]);\n    }\n\n    /**\n     * Disable/enable features before/after loading.\n     *\n     * @param {*} isLoading Is an AJAX call taking place?\n     */\n    function loading(isLoading) {\n        errorDiv.hidden = true;\n        if (isLoading) {\n            document.querySelector('.loading-display').removeAttribute('hidden');\n            document.querySelector('.library-import-link').setAttribute('disabled', 'disabled');\n            document.querySelectorAll('.library-file-link').forEach(el => el.setAttribute('disabled', 'disabled'));\n        } else {\n            document.querySelector('.loading-display').setAttribute('hidden', true);\n            document.querySelector('.library-import-link').removeAttribute('disabled');\n            document.querySelectorAll('.library-file-link').forEach(el => el.removeAttribute('disabled'));\n        }\n    }\n\n    /** Export our entry point. */\n    return {\n        setup: setup\n    };\n});\n"],"names":["define","Ajax","CustomEvents","categoryId","libraryDiv","rawDiv","variablesDiv","importListDiv","displayedDiv","errorDiv","currentPath","libraryRender","e","filepath","target","getAttribute","loading","hidden","call","methodname","args","category","done","response","innerHTML","questionrender","questiontext","questionvariables","replace","split","pop","document","querySelectorAll","forEach","el","removeAttribute","notifyFilterContentUpdated","fail","libraryImport","success","isLoading","querySelector","setAttribute","setup","cId","elem","addEventListener"],"mappings":";;;;;;;;AAuBAA,6BAAO,CACH,YACA,wBACD,SACCC,KACAC,kBAGIC,WAAa,KACbC,WAAa,KACbC,OAAS,KACTC,aAAe,KACfC,cAAgB,KAChBC,aAAe,KACfC,SAAW,KACXC,YAAc,cA+BTC,cAAcC,SACbC,SAAWD,EAAEE,OAAOC,aAAa,iBACvCL,YAAcG,SACdG,SAAQ,GACRP,SAASQ,QAAS,EAClBhB,KAAKiB,KAAK,CAAC,CACPC,WAAY,6BACZC,KAAM,CAACC,SAAUlB,WAAYU,SAAUA,UACvCS,KAAM,SAASC,UACXP,SAAQ,GACRZ,WAAWoB,UAAYD,SAASE,eAChCpB,OAAOmB,UAAYD,SAASG,aAC5BpB,aAAakB,UAAYD,SAASI,kBAAkBC,QAAQ,KAAM,SAClEpB,aAAagB,UAAYd,YAAYmB,MAAM,KAAKC,MAChDC,SAASC,iBAAiB,2BACrBC,SAAQC,IAAMA,GAAGC,gBAAgB,YAEtCjC,aAAakC,2BAA2BhC,aAE5CiC,KAAM,WACFrB,SAAQ,GACRP,SAASQ,QAAS,eASrBqB,oBACA5B,mBAGLD,SAASQ,QAAS,QACZJ,SAAWH,YACjBM,SAAQ,GACRf,KAAKiB,KAAK,CAAC,CACPC,WAAY,6BACZC,KAAM,CAACC,SAAUlB,WAAYU,SAAUA,UACvCS,KAAM,SAASC,UACXP,SAAQ,GACJO,SAASgB,QACThC,cAAciB,UAAYjB,cAAciB,UAAY,OAASd,YAAYmB,MAAM,KAAKC,MAEpFrB,SAASQ,QAAS,GAG1BoB,KAAM,WACFrB,SAAQ,GACRP,SAASQ,QAAS,eAUrBD,QAAQwB,WACb/B,SAASQ,QAAS,EACduB,WACAT,SAASU,cAAc,oBAAoBN,gBAAgB,UAC3DJ,SAASU,cAAc,wBAAwBC,aAAa,WAAY,YACxEX,SAASC,iBAAiB,sBAAsBC,SAAQC,IAAMA,GAAGQ,aAAa,WAAY,gBAE1FX,SAASU,cAAc,oBAAoBC,aAAa,UAAU,GAClEX,SAASU,cAAc,wBAAwBN,gBAAgB,YAC/DJ,SAASC,iBAAiB,sBAAsBC,SAAQC,IAAMA,GAAGC,gBAAgB,qBAKlF,CACHQ,eAnGWC,KACXzC,WAAayC,IACbxC,WAAa2B,SAASU,cAAc,0BACpCpC,OAAS0B,SAASU,cAAc,8BAChCnC,aAAeyB,SAASU,cAAc,oCACtClC,cAAgBwB,SAASU,cAAc,gCACvCjC,aAAeuB,SAASU,cAAc,oCACtChC,SAAWsB,SAASU,cAAc,wBAClCzB,SAAQ,GACWe,SAASC,iBAAiB,sBAClCC,SAAQ,SAASY,MACxBA,KAAKC,iBAAiB,QAASnC,kBAEdoB,SAASU,cAAc,wBAC/BK,iBAAiB,QAASR,eACvCtB,SAAQ"}