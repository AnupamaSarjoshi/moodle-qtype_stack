
export const stack_sortable=class{constructor(state,availableId,inputId=null,options=null){this.state=state;this.inputId=inputId;if(inputId!=null){this.input=document.getElementById(this.inputId);};this.availableId=availableId;this.available=document.getElementById(this.availableId);this.defaultOptions={animation:50};if(options==null){this.userOptions=this.defaultOptions;}else{this.userOptions=Object.assign(this.defaultOptions,options);};this.options=Object.assign(this.userOptions,{ghostClass:"list-group-item-info",group:"shared"});}
generate_available(proofSteps){for(const key in this.state.available){let li=document.createElement("li");li.innerText=proofSteps[this.state.available[key]];li.setAttribute("data-id",this.state.available[key]);li.className="list-group-item";this.available.append(li);};if(this.inputId!=null){this.input.value=JSON.stringify(this.state);this.input.dispatchEvent(new Event("change"));};}
update_state(newUsed,newAvailable){var newState={used:[],available:[]};newState.used=newUsed.toArray();newState.available=newAvailable.toArray();if(this.inputId!=null){this.input.value=JSON.stringify(newState);this.input.dispatchEvent(new Event('change'));};this.state=newState;}};export default{stack_sortable};